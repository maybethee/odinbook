<%# Posts should always display the post content, author, comments, and likes. %>
<div><%= link_to "edit post", edit_post_path %></div><br>
<h4><%= link_to "@#{@post.user.username}", user_profile_path(@post.user)  %></h4>
<div><%= @post.content %></div> <br>
<div><%= @post.updated_at.strftime("%m/%d/%Y %I:%M%p")%></div>

<div>
  <% if @post.user_id == current_user.id %>
    <%= button_to 'Delete Post', post_path(@post), method: :delete %>
  <% end %>
</div>

<div><%= link_to "#{pluralize(@post.likes.count, 'Like')}", post_likes_path(@post) %> </div>

<div>
  <% already_liked = @post.likes.find { |like| like.user_id == current_user.id} %>
  <% if already_liked %>
    <%= button_to 'Unlike', post_like_path(@post, already_liked), method: :delete %>
  <% else %>
    <%= button_to 'Like', post_likes_path(@post), method: :post %>
  <% end %>
</div>

<div>
  <%= form_with model: [@post, @comment] do |form| %>
  <div>
    <%= form.label 'comment:' %>
    <%= form.text_area :content %>
    <br>
  </div>

  <div>
    <%= form.submit %>
  </div>
  <% end %>

</div>

<h4>Comments:</h4>

<div>
  <% @comments.each do |comment| %>
    <br><%= link_to "@#{comment.user.username}", user_profile_path(comment.user) %>:
    <%= comment.content %><br>
    <%= time_ago_in_words(comment.created_at) %> ago<br>
    <% if comment.user_id == current_user.id %>
      <%= button_to 'Delete', post_comment_path(@post, comment), method: :delete %> 
    <% end %>
  <% end %>
</div>

